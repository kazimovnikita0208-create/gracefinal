// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
import fetch from 'node-fetch';

async function testAPI() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API...');
    
    // –¢–µ—Å—Ç health check
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º health check...');
    const healthResponse = await fetch('http://localhost:3334/health');
    console.log('Health check —Å—Ç–∞—Ç—É—Å:', healthResponse.status);
    
    // –¢–µ—Å—Ç –∞–¥–º–∏–Ω API
    console.log('2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω API...');
    const mastersResponse = await fetch('http://localhost:3334/api/admin/masters');
    console.log('Masters API —Å—Ç–∞—Ç—É—Å:', mastersResponse.status);
    
    if (mastersResponse.ok) {
      const data = await mastersResponse.json();
      console.log('üìä –î–∞–Ω–Ω—ã–µ –º–∞—Å—Ç–µ—Ä–æ–≤:', JSON.stringify(data, null, 2));
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ API:', mastersResponse.statusText);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);
  }
}

testAPI().catch(console.error);
