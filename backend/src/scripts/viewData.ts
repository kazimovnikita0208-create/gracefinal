import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function viewData() {
  console.log('üîç –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Grace Beauty Salon\n');

  try {
    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    const users = await prisma.user.findMany();
    console.log('üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:', users.length);
    users.forEach(user => {
      console.log(`  - ${user.firstName} ${user.lastName || ''} (ID: ${user.id}, Telegram: ${user.telegramId})`);
    });

    // –ú–∞—Å—Ç–µ—Ä–∞
    const masters = await prisma.master.findMany();
    console.log('\nüë®‚Äçüíº –ú–∞—Å—Ç–µ—Ä–∞:', masters.length);
    masters.forEach(master => {
      console.log(`  - ${master.name} (${master.specialization}) - –†–µ–π—Ç–∏–Ω–≥: ${master.rating}, –û–ø—ã—Ç: ${master.experience} –ª–µ—Ç`);
    });

    // –£—Å–ª—É–≥–∏
    const services = await prisma.service.findMany();
    console.log('\nüíÖ –£—Å–ª—É–≥–∏:', services.length);
    services.forEach(service => {
      const price = (service.price / 100).toFixed(0);
      console.log(`  - ${service.name} - ${price}‚ÇΩ, ${service.duration} –º–∏–Ω (${service.category})`);
    });

    // –°–≤—è–∑–∏ –º–∞—Å—Ç–µ—Ä-—É—Å–ª—É–≥–∞
    const masterServices = await prisma.masterService.findMany({
      include: {
        master: true,
        service: true
      }
    });
    console.log('\nüîó –°–≤—è–∑–∏ –º–∞—Å—Ç–µ—Ä-—É—Å–ª—É–≥–∞:', masterServices.length);
    masterServices.forEach(ms => {
      console.log(`  - ${ms.master.name} ‚Üí ${ms.service.name}`);
    });

    // –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    const schedules = await prisma.masterSchedule.findMany({
      include: {
        master: true
      }
    });
    console.log('\nüìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–æ–≤:');
    const dayNames = ['–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ', '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞'];
    schedules.forEach(schedule => {
      const dayName = dayNames[schedule.dayOfWeek];
      const status = schedule.isWorking ? '–†–∞–±–æ—Ç–∞–µ—Ç' : '–í—ã—Ö–æ–¥–Ω–æ–π';
      console.log(`  - ${schedule.master.name}: ${dayName} ${schedule.startTime}-${schedule.endTime} (${status})`);
    });

    // –ó–∞–ø–∏—Å–∏
    const appointments = await prisma.appointment.findMany({
      include: {
        user: true,
        master: true,
        service: true
      }
    });
    console.log('\nüìÖ –ó–∞–ø–∏—Å–∏:', appointments.length);
    appointments.forEach(appointment => {
      const date = appointment.appointmentDate.toLocaleDateString('ru-RU');
      const price = (appointment.totalPrice / 100).toFixed(0);
      console.log(`  - ${appointment.user.firstName} ‚Üí ${appointment.master.name} (${appointment.service.name}) - ${date}, ${price}‚ÇΩ`);
    });

    // –ê–¥–º–∏–Ω—ã
    const admins = await prisma.admin.findMany();
    console.log('\nüë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã:', admins.length);
    admins.forEach(admin => {
      console.log(`  - ${admin.name} (${admin.role}) - Telegram: ${admin.telegramId}`);
    });

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const notifications = await prisma.notification.findMany();
    console.log('\nüîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', notifications.length);
    notifications.forEach(notification => {
      console.log(`  - ${notification.title} (${notification.type}) - ${notification.sentAt.toLocaleDateString('ru-RU')}`);
    });

    console.log('\n‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!');
    console.log('\nüí° –î–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: npm run db:studio');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await prisma.$disconnect();
  }
}

viewData();



