// –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞
const fetch = require('node-fetch');

async function testCreateMaster() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞...');
    
    const response = await fetch('http://localhost:3335/api/admin/masters', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        name: '–¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Å—Ç–µ—Ä',
        specialization: '–¢–µ—Å—Ç–æ–≤–∞—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è',
        experience: 5,
        description: '–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ'
      })
    });
    
    console.log('–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
    
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ –ú–∞—Å—Ç–µ—Ä —Å–æ–∑–¥–∞–Ω:', JSON.stringify(data, null, 2));
    } else {
      const error = await response.text();
      console.log('‚ùå –û—à–∏–±–∫–∞:', error);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);
  }
}

testCreateMaster();



