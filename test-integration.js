// –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –∏ –±—ç–∫–µ–Ω–¥–∞
import fetch from 'node-fetch';

async function testIntegration() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –∏ –±—ç–∫–µ–Ω–¥–∞\n');
  console.log('=' .repeat(50));

  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ç–∫–µ–Ω–¥
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –±—ç–∫–µ–Ω–¥ API...');
    const backendResponse = await fetch('http://localhost:3001/health');
    const backendData = await backendResponse.json();
    console.log('‚úÖ –ë—ç–∫–µ–Ω–¥:', backendData.success ? 'OK' : 'FAILED');
    console.log('   –°—Ç–∞—Ç—É—Å:', backendData.data?.status);
    console.log('');

    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
    console.log('2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥...');
    const frontendResponse = await fetch('http://localhost:3000');
    console.log('‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥:', frontendResponse.ok ? 'OK' : 'FAILED');
    console.log('   –°—Ç–∞—Ç—É—Å:', frontendResponse.status);
    console.log('');

    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º API –º–∞—Å—Ç–µ—Ä–æ–≤
    console.log('3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º API –º–∞—Å—Ç–µ—Ä–æ–≤...');
    const mastersResponse = await fetch('http://localhost:3001/api/masters');
    const mastersData = await mastersResponse.json();
    console.log('‚úÖ –ú–∞—Å—Ç–µ—Ä–∞:', mastersData.success ? 'OK' : 'FAILED');
    console.log('   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:', mastersData.count);
    console.log('');

    // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º API —É—Å–ª—É–≥
    console.log('4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º API —É—Å–ª—É–≥...');
    const servicesResponse = await fetch('http://localhost:3001/api/services');
    const servicesData = await servicesResponse.json();
    console.log('‚úÖ –£—Å–ª—É–≥–∏:', servicesData.success ? 'OK' : 'FAILED');
    console.log('   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:', servicesData.count);
    console.log('');

    console.log('üéâ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!');
    console.log('=' .repeat(50));
    console.log('üìä –§—Ä–æ–Ω—Ç–µ–Ω–¥: http://localhost:3000');
    console.log('üîß –ë—ç–∫–µ–Ω–¥: http://localhost:3001');
    console.log('üìö API: http://localhost:3001/api');
    console.log('üí° –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:', error.message);
    console.log('\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–±–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–ø—É—â–µ–Ω—ã:');
    console.log('   - –ë—ç–∫–µ–Ω–¥: npm run dev (–≤ –ø–∞–ø–∫–µ backend)');
    console.log('   - –§—Ä–æ–Ω—Ç–µ–Ω–¥: npm run dev (–≤ –ø–∞–ø–∫–µ frontend)');
  }
}

testIntegration();
