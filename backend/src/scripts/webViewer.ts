import express from 'express';
import { PrismaClient } from '@prisma/client';

const app = express();
const prisma = new PrismaClient();
const PORT = 5556; // –î—Ä—É–≥–æ–π –ø–æ—Ä—Ç, —á—Ç–æ–±—ã –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å

// Middleware
app.use(express.json());

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get('/', async (req, res) => {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    const [users, masters, services, appointments, admins] = await Promise.all([
      prisma.user.findMany(),
      prisma.master.findMany(),
      prisma.service.findMany(),
      prisma.appointment.findMany({
        include: {
          user: true,
          master: true,
          service: true
        }
      }),
      prisma.admin.findMany()
    ]);

    const masterServices = await prisma.masterService.findMany({
      include: {
        master: true,
        service: true
      }
    });

    const schedules = await prisma.masterSchedule.findMany({
      include: {
        master: true
      }
    });

    const notifications = await prisma.notification.findMany();

    // –§–æ—Ä–º–∏—Ä—É–µ–º HTML
    const html = `
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Grace Beauty Salon - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            margin: 0;
            padding: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 12px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        .header {
            background: linear-gradient(135deg, #ec4899, #be185d);
            color: white;
            padding: 30px;
            text-align: center;
        }
        .header h1 {
            margin: 0;
            font-size: 2.5rem;
            font-weight: 700;
        }
        .header p {
            margin: 10px 0 0 0;
            opacity: 0.9;
            font-size: 1.1rem;
        }
        .content {
            padding: 30px;
        }
        .section {
            margin-bottom: 40px;
            background: #f8fafc;
            border-radius: 8px;
            padding: 20px;
            border-left: 4px solid #ec4899;
        }
        .section h2 {
            margin: 0 0 20px 0;
            color: #1f2937;
            font-size: 1.5rem;
        }
        .stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        .stat-card {
            background: white;
            padding: 20px;
            border-radius: 8px;
            text-align: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .stat-number {
            font-size: 2rem;
            font-weight: bold;
            color: #ec4899;
            margin-bottom: 5px;
        }
        .stat-label {
            color: #6b7280;
            font-size: 0.9rem;
        }
        .data-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 15px;
        }
        .data-table th,
        .data-table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #e5e7eb;
        }
        .data-table th {
            background: #f3f4f6;
            font-weight: 600;
            color: #374151;
        }
        .data-table tr:hover {
            background: #f9fafb;
        }
        .badge {
            display: inline-block;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 0.8rem;
            font-weight: 500;
        }
        .badge-success {
            background: #dcfce7;
            color: #166534;
        }
        .badge-warning {
            background: #fef3c7;
            color: #92400e;
        }
        .badge-info {
            background: #dbeafe;
            color: #1e40af;
        }
        .price {
            font-weight: 600;
            color: #059669;
        }
        .rating {
            color: #f59e0b;
            font-weight: 600;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üå∏ Grace Beauty Salon</h1>
            <p>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö - –ü—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏</p>
        </div>
        
        <div class="content">
            <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
            <div class="stats">
                <div class="stat-card">
                    <div class="stat-number">${users.length}</div>
                    <div class="stat-label">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number">${masters.length}</div>
                    <div class="stat-label">–ú–∞—Å—Ç–µ—Ä–∞</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number">${services.length}</div>
                    <div class="stat-label">–£—Å–ª—É–≥–∏</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number">${appointments.length}</div>
                    <div class="stat-label">–ó–∞–ø–∏—Å–∏</div>
                </div>
            </div>

            <!-- –ú–∞—Å—Ç–µ—Ä–∞ -->
            <div class="section">
                <h2>üë®‚Äçüíº –ú–∞—Å—Ç–µ—Ä–∞ (${masters.length})</h2>
                <table class="data-table">
                    <thead>
                        <tr>
                            <th>–ò–º—è</th>
                            <th>–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è</th>
                            <th>–û–ø—ã—Ç</th>
                            <th>–†–µ–π—Ç–∏–Ω–≥</th>
                            <th>–°—Ç–∞—Ç—É—Å</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${masters.map(master => `
                            <tr>
                                <td><strong>${master.name}</strong></td>
                                <td>${master.specialization}</td>
                                <td>${master.experience || 0} –ª–µ—Ç</td>
                                <td><span class="rating">‚≠ê ${master.rating}</span></td>
                                <td><span class="badge ${master.isActive ? 'badge-success' : 'badge-warning'}">${master.isActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}</span></td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
            </div>

            <!-- –£—Å–ª—É–≥–∏ -->
            <div class="section">
                <h2>üíÖ –£—Å–ª—É–≥–∏ (${services.length})</h2>
                <table class="data-table">
                    <thead>
                        <tr>
                            <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                            <th>–¶–µ–Ω–∞</th>
                            <th>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</th>
                            <th>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>
                            <th>–°—Ç–∞—Ç—É—Å</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${services.map(service => `
                            <tr>
                                <td><strong>${service.name}</strong></td>
                                <td><span class="price">${(service.price / 100).toFixed(0)}‚ÇΩ</span></td>
                                <td>${service.duration} –º–∏–Ω</td>
                                <td><span class="badge badge-info">${service.category}</span></td>
                                <td><span class="badge ${service.isActive ? 'badge-success' : 'badge-warning'}">${service.isActive ? '–ê–∫—Ç–∏–≤–Ω–∞' : '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞'}</span></td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
            </div>

            <!-- –°–≤—è–∑–∏ –º–∞—Å—Ç–µ—Ä-—É—Å–ª—É–≥–∞ -->
            <div class="section">
                <h2>üîó –°–≤—è–∑–∏ –º–∞—Å—Ç–µ—Ä-—É—Å–ª—É–≥–∞ (${masterServices.length})</h2>
                <table class="data-table">
                    <thead>
                        <tr>
                            <th>–ú–∞—Å—Ç–µ—Ä</th>
                            <th>–£—Å–ª—É–≥–∞</th>
                            <th>–¶–µ–Ω–∞</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${masterServices.map(ms => `
                            <tr>
                                <td><strong>${ms.master.name}</strong></td>
                                <td>${ms.service.name}</td>
                                <td><span class="price">${(ms.service.price / 100).toFixed(0)}‚ÇΩ</span></td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
            </div>

            <!-- –ó–∞–ø–∏—Å–∏ -->
            <div class="section">
                <h2>üìÖ –ó–∞–ø–∏—Å–∏ (${appointments.length})</h2>
                ${appointments.length > 0 ? `
                    <table class="data-table">
                        <thead>
                            <tr>
                                <th>–ö–ª–∏–µ–Ω—Ç</th>
                                <th>–ú–∞—Å—Ç–µ—Ä</th>
                                <th>–£—Å–ª—É–≥–∞</th>
                                <th>–î–∞—Ç–∞</th>
                                <th>–°—Ç–∞—Ç—É—Å</th>
                                <th>–¶–µ–Ω–∞</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${appointments.map(appointment => `
                                <tr>
                                    <td>${appointment.user.firstName} ${appointment.user.lastName || ''}</td>
                                    <td>${appointment.master.name}</td>
                                    <td>${appointment.service.name}</td>
                                    <td>${new Date(appointment.appointmentDate).toLocaleDateString('ru-RU')}</td>
                                    <td><span class="badge badge-info">${appointment.status}</span></td>
                                    <td><span class="price">${(appointment.totalPrice / 100).toFixed(0)}‚ÇΩ</span></td>
                                </tr>
                            `).join('')}
                        </tbody>
                    </table>
                ` : '<p style="text-align: center; color: #6b7280; font-style: italic;">–ó–∞–ø–∏—Å–µ–π –ø–æ–∫–∞ –Ω–µ—Ç</p>'}
            </div>

            <!-- –ê–¥–º–∏–Ω—ã -->
            <div class="section">
                <h2>üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã (${admins.length})</h2>
                <table class="data-table">
                    <thead>
                        <tr>
                            <th>–ò–º—è</th>
                            <th>–†–æ–ª—å</th>
                            <th>Telegram ID</th>
                            <th>–°—Ç–∞—Ç—É—Å</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${admins.map(admin => `
                            <tr>
                                <td><strong>${admin.name}</strong></td>
                                <td><span class="badge badge-info">${admin.role}</span></td>
                                <td>${admin.telegramId.toString()}</td>
                                <td><span class="badge ${admin.isActive ? 'badge-success' : 'badge-warning'}">${admin.isActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}</span></td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</body>
</html>
    `;

    res.send(html);
  } catch (error) {
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö', details: error });
  }
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
  console.log(`üåê –í–µ–±-–ø—Ä–æ—Å–º–æ—Ç—Ä—â–∏–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
  console.log('üìä –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤—ã—à–µ');
});

// Graceful shutdown
process.on('SIGINT', async () => {
  console.log('\nüõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –≤–µ–±-–ø—Ä–æ—Å–º–æ—Ç—Ä—â–∏–∫–∞...');
  await prisma.$disconnect();
  process.exit(0);
});

process.on('SIGTERM', async () => {
  console.log('\nüõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –≤–µ–±-–ø—Ä–æ—Å–º–æ—Ç—Ä—â–∏–∫–∞...');
  await prisma.$disconnect();
  process.exit(0);
});

// –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
process.on('uncaughtException', (error) => {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
});

process.on('unhandledRejection', (reason, promise) => {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞:', reason);
});
