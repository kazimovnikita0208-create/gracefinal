import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

  // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤
  const masters = await Promise.all([
    prisma.master.create({
      data: {
        name: '–ê–Ω–Ω–∞ –ò–≤–∞–Ω–æ–≤–∞',
        specialization: '–°—Ç–∏–ª–∏—Å—Ç-–ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä',
        description: '–û–ø—ã—Ç–Ω—ã–π –º–∞—Å—Ç–µ—Ä —Å 8-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–∏ –∏ —Å—Ç—Ä–∏–∂–∫–∞—Ö.',
        photoUrl: '/images/masters/anna.jpg',
        experience: 8,
        rating: 4.9,
        isActive: true,
      },
    }),
    prisma.master.create({
      data: {
        name: '–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞',
        specialization: '–ú–∞—Å—Ç–µ—Ä –º–∞–Ω–∏–∫—é—Ä–∞ –∏ –ø–µ–¥–∏–∫—é—Ä–∞',
        description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π nail-–º–∞—Å—Ç–µ—Ä —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã 5 –ª–µ—Ç.',
        photoUrl: '/images/masters/maria.jpg',
        experience: 5,
        rating: 4.8,
        isActive: true,
      },
    }),
    prisma.master.create({
      data: {
        name: '–ï–ª–µ–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞',
        specialization: '–ö–æ—Å–º–µ—Ç–æ–ª–æ–≥',
        description: '–ö–æ—Å–º–µ—Ç–æ–ª–æ–≥ —Å 10-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º. –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —É—Ö–æ–¥—É –∑–∞ –∫–æ–∂–µ–π –ª–∏—Ü–∞.',
        photoUrl: '/images/masters/elena.jpg',
        experience: 10,
        rating: 4.9,
        isActive: true,
      },
    }),
  ]);

  console.log('‚úÖ –ú–∞—Å—Ç–µ—Ä–∞ —Å–æ–∑–¥–∞–Ω—ã:', masters.length);

  // –°–æ–∑–¥–∞–µ–º —É—Å–ª—É–≥–∏
  const services = await Promise.all([
    prisma.service.create({
      data: {
        name: '–°—Ç—Ä–∏–∂–∫–∞ –∂–µ–Ω—Å–∫–∞—è',
        description: '–ú–æ–¥–Ω–∞—è –∂–µ–Ω—Å–∫–∞—è —Å—Ç—Ä–∏–∂–∫–∞ —Å —É–∫–ª–∞–¥–∫–æ–π',
        price: 200000, // 2000 —Ä—É–± –≤ –∫–æ–ø–µ–π–∫–∞—Ö
        duration: 60,
        category: 'hair',
        isActive: true,
      },
    }),
    prisma.service.create({
      data: {
        name: '–û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ –≤–æ–ª–æ—Å',
        description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ –≤–æ–ª–æ—Å',
        price: 450000, // 4500 —Ä—É–± –≤ –∫–æ–ø–µ–π–∫–∞—Ö
        duration: 180,
        category: 'hair',
        isActive: true,
      },
    }),
    prisma.service.create({
      data: {
        name: '–ú–∞–Ω–∏–∫—é—Ä',
        description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–∞–Ω–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º',
        price: 150000, // 1500 —Ä—É–± –≤ –∫–æ–ø–µ–π–∫–∞—Ö
        duration: 90,
        category: 'nails',
        isActive: true,
      },
    }),
    prisma.service.create({
      data: {
        name: '–ü–µ–¥–∏–∫—é—Ä',
        description: '–ê–ø–ø–∞—Ä–∞—Ç–Ω—ã–π –ø–µ–¥–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º',
        price: 200000, // 2000 —Ä—É–± –≤ –∫–æ–ø–µ–π–∫–∞—Ö
        duration: 120,
        category: 'nails',
        isActive: true,
      },
    }),
    prisma.service.create({
      data: {
        name: '–ß–∏—Å—Ç–∫–∞ –ª–∏—Ü–∞',
        description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —á–∏—Å—Ç–∫–∞ –ª–∏—Ü–∞',
        price: 300000, // 3000 —Ä—É–± –≤ –∫–æ–ø–µ–π–∫–∞—Ö
        duration: 90,
        category: 'face',
        isActive: true,
      },
    }),
    prisma.service.create({
      data: {
        name: '–ú–∞—Å—Å–∞–∂ –ª–∏—Ü–∞',
        description: '–†–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–π –º–∞—Å—Å–∞–∂ –ª–∏—Ü–∞',
        price: 250000, // 2500 —Ä—É–± –≤ –∫–æ–ø–µ–π–∫–∞—Ö
        duration: 60,
        category: 'face',
        isActive: true,
      },
    }),
  ]);

  console.log('‚úÖ –£—Å–ª—É–≥–∏ —Å–æ–∑–¥–∞–Ω—ã:', services.length);

  // –°–≤—è–∑—ã–≤–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤ —Å —É—Å–ª—É–≥–∞–º–∏
  const masterServices = [];
  
  // –ê–Ω–Ω–∞ (—Å—Ç–∏–ª–∏—Å—Ç) - –ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–∏–µ —É—Å–ª—É–≥–∏
  masterServices.push(
    await prisma.masterService.create({
      data: {
        masterId: masters[0].id,
        serviceId: services[0].id, // –°—Ç—Ä–∏–∂–∫–∞ –∂–µ–Ω—Å–∫–∞—è
      },
    }),
    await prisma.masterService.create({
      data: {
        masterId: masters[0].id,
        serviceId: services[1].id, // –û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ –≤–æ–ª–æ—Å
      },
    })
  );

  // –ú–∞—Ä–∏—è (nail-–º–∞—Å—Ç–µ—Ä) - –º–∞–Ω–∏–∫—é—Ä –∏ –ø–µ–¥–∏–∫—é—Ä
  masterServices.push(
    await prisma.masterService.create({
      data: {
        masterId: masters[1].id,
        serviceId: services[2].id, // –ú–∞–Ω–∏–∫—é—Ä
      },
    }),
    await prisma.masterService.create({
      data: {
        masterId: masters[1].id,
        serviceId: services[3].id, // –ü–µ–¥–∏–∫—é—Ä
      },
    })
  );

  // –ï–ª–µ–Ω–∞ (–∫–æ—Å–º–µ—Ç–æ–ª–æ–≥) - –∫–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è
  masterServices.push(
    await prisma.masterService.create({
      data: {
        masterId: masters[2].id,
        serviceId: services[4].id, // –ß–∏—Å—Ç–∫–∞ –ª–∏—Ü–∞
      },
    }),
    await prisma.masterService.create({
      data: {
        masterId: masters[2].id,
        serviceId: services[5].id, // –ú–∞—Å—Å–∞–∂ –ª–∏—Ü–∞
      },
    })
  );

  console.log('‚úÖ –°–≤—è–∑–∏ –º–∞—Å—Ç–µ—Ä-—É—Å–ª—É–≥–∞ —Å–æ–∑–¥–∞–Ω—ã:', masterServices.length);

  // –°–æ–∑–¥–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –º–∞—Å—Ç–µ—Ä–æ–≤ (—Ä–∞–±–æ—á–∏–µ –¥–Ω–∏: –ü–Ω-–ü—Ç 9:00-18:00, –°–± 10:00-16:00)
  const schedules = [];
  
  for (const master of masters) {
    // –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫-–ü—è—Ç–Ω–∏—Ü–∞ (1-5)
    for (let day = 1; day <= 5; day++) {
      schedules.push(
        await prisma.masterSchedule.create({
          data: {
            masterId: master.id,
            dayOfWeek: day,
            startTime: '09:00',
            endTime: '18:00',
            isWorking: true,
          },
        })
      );
    }
    
    // –°—É–±–±–æ—Ç–∞ (6)
    schedules.push(
      await prisma.masterSchedule.create({
        data: {
          masterId: master.id,
          dayOfWeek: 6,
          startTime: '10:00',
          endTime: '16:00',
          isWorking: true,
        },
      })
    );
    
    // –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ (0) - –≤—ã—Ö–æ–¥–Ω–æ–π
    schedules.push(
      await prisma.masterSchedule.create({
        data: {
          masterId: master.id,
          dayOfWeek: 0,
          startTime: '00:00',
          endTime: '00:00',
          isWorking: false,
        },
      })
    );
  }

  console.log('‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ:', schedules.length);

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
  const admin = await prisma.admin.create({
    data: {
      telegramId: BigInt(123456789),
      name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      role: 'SUPER_ADMIN',
      isActive: true,
    },
  });

  console.log('‚úÖ –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω:', admin.name);

  console.log('üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!');
}

main()
  .catch((e) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });



