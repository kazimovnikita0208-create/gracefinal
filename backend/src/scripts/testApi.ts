import fetch from 'node-fetch';

const API_BASE = 'http://localhost:3334/api';

async function testApi() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Grace Beauty Salon API\n');
  console.log('=' .repeat(50));

  try {
    // –¢–µ—Å—Ç 1: Health check
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Health Check...');
    const healthResponse = await fetch('http://localhost:3334/health');
    const healthData: any = await healthResponse.json();
    console.log('‚úÖ Health Check:', healthData.success ? 'OK' : 'FAILED');
    console.log('   –°—Ç–∞—Ç—É—Å:', healthData.data?.status);
    console.log('   –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:', Math.round(healthData.data?.uptime || 0), '—Å–µ–∫\n');

    // –¢–µ—Å—Ç 2: –ú–∞—Å—Ç–µ—Ä–∞
    console.log('2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º API –º–∞—Å—Ç–µ—Ä–æ–≤...');
    const mastersResponse = await fetch(`${API_BASE}/masters`);
    const mastersData: any = await mastersResponse.json();
    console.log('‚úÖ –ú–∞—Å—Ç–µ—Ä–∞:', mastersData.success ? 'OK' : 'FAILED');
    console.log('   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:', mastersData.count);
    if (mastersData.data && mastersData.data.length > 0) {
      console.log('   –ü–µ—Ä–≤—ã–π –º–∞—Å—Ç–µ—Ä:', mastersData.data[0].name);
      console.log('   –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:', mastersData.data[0].specialization);
      console.log('   –†–µ–π—Ç–∏–Ω–≥:', mastersData.data[0].rating);
    }
    console.log('');

    // –¢–µ—Å—Ç 3: –£—Å–ª—É–≥–∏
    console.log('3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º API —É—Å–ª—É–≥...');
    const servicesResponse = await fetch(`${API_BASE}/services`);
    const servicesData: any = await servicesResponse.json();
    console.log('‚úÖ –£—Å–ª—É–≥–∏:', servicesData.success ? 'OK' : 'FAILED');
    console.log('   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:', servicesData.count);
    if (servicesData.data && servicesData.data.length > 0) {
      console.log('   –ü–µ—Ä–≤–∞—è —É—Å–ª—É–≥–∞:', servicesData.data[0].name);
      console.log('   –¶–µ–Ω–∞:', (servicesData.data[0].price / 100).toFixed(0) + '‚ÇΩ');
      console.log('   –ö–∞—Ç–µ–≥–æ—Ä–∏—è:', servicesData.data[0].category);
    }
    console.log('');

    // –¢–µ—Å—Ç 4: –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —É—Å–ª—É–≥
    console.log('4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É—Å–ª—É–≥...');
    const categoriesResponse = await fetch(`${API_BASE}/services/categories`);
    const categoriesData: any = await categoriesResponse.json();
    console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:', categoriesData.success ? 'OK' : 'FAILED');
    if (categoriesData.data && categoriesData.data.length > 0) {
      console.log('   –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:', categoriesData.data.map((cat: any) => cat.label).join(', '));
    }
    console.log('');

    // –¢–µ—Å—Ç 5: –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    console.log('5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...');
    const scheduleResponse = await fetch(`${API_BASE}/schedule`);
    const scheduleData: any = await scheduleResponse.json();
    console.log('‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:', scheduleData.success ? 'OK' : 'FAILED');
    console.log('   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π:', scheduleData.count);
    if (scheduleData.data && scheduleData.data.length > 0) {
      const firstSchedule = scheduleData.data[0];
      console.log('   –ú–∞—Å—Ç–µ—Ä:', firstSchedule.master.name);
      console.log('   –î–µ–Ω—å:', firstSchedule.dayName);
      console.log('   –í—Ä–µ–º—è:', `${firstSchedule.startTime}-${firstSchedule.endTime}`);
    }
    console.log('');

    // –¢–µ—Å—Ç 6: –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –º–∞—Å—Ç–µ—Ä
    if (mastersData.data && mastersData.data.length > 0) {
      console.log('6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞...');
      const masterId = mastersData.data[0].id;
      const masterResponse = await fetch(`${API_BASE}/masters/${masterId}`);
      const masterData: any = await masterResponse.json();
      console.log('‚úÖ –ú–∞—Å—Ç–µ—Ä –ø–æ ID:', masterData.success ? 'OK' : 'FAILED');
      if (masterData.data) {
        console.log('   –ò–º—è:', masterData.data.name);
        console.log('   –£—Å–ª—É–≥:', masterData.data.services.length);
        console.log('   –û—Ç–∑—ã–≤–æ–≤:', masterData.data.reviews.length);
      }
      console.log('');
    }

    // –¢–µ—Å—Ç 7: –ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è —É—Å–ª—É–≥–∞
    if (servicesData.data && servicesData.data.length > 0) {
      console.log('7Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —É—Å–ª—É–≥—É...');
      const serviceId = servicesData.data[0].id;
      const serviceResponse = await fetch(`${API_BASE}/services/${serviceId}`);
      const serviceData: any = await serviceResponse.json();
      console.log('‚úÖ –£—Å–ª—É–≥–∞ –ø–æ ID:', serviceData.success ? 'OK' : 'FAILED');
      if (serviceData.data) {
        console.log('   –ù–∞–∑–≤–∞–Ω–∏–µ:', serviceData.data.name);
        console.log('   –ú–∞—Å—Ç–µ—Ä–æ–≤:', serviceData.data.masters.length);
        console.log('   –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:', serviceData.data.duration, '–º–∏–Ω');
      }
      console.log('');
    }

    // –¢–µ—Å—Ç 8: –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã (–µ—Å–ª–∏ –µ—Å—Ç—å –º–∞—Å—Ç–µ—Ä–∞ –∏ —É—Å–ª—É–≥–∏)
    if (mastersData.data && mastersData.data.length > 0 && servicesData.data && servicesData.data.length > 0) {
      console.log('8Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã...');
      const masterId = mastersData.data[0].id;
      const serviceId = servicesData.data[0].id;
      const tomorrow = new Date();
      tomorrow.setDate(tomorrow.getDate() + 1);
      const dateStr = tomorrow.toISOString().split('T')[0];
      
      const slotsResponse = await fetch(`${API_BASE}/schedule/available?masterId=${masterId}&serviceId=${serviceId}&date=${dateStr}`);
      const slotsData: any = await slotsResponse.json();
      console.log('‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã:', slotsData.success ? 'OK' : 'FAILED');
      if (slotsData.data) {
        console.log('   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ—Ç–æ–≤:', slotsData.data.length);
        if (slotsData.data.length > 0) {
          console.log('   –ü–µ—Ä–≤—ã–π —Å–ª–æ—Ç:', new Date(slotsData.data[0]).toLocaleString('ru-RU'));
        }
      }
      console.log('');
    }

    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
    console.log('=' .repeat(50));
    console.log('üìä API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    console.log('üåê Frontend –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ API');
    console.log('üí° –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å frontend');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:', error);
    console.log('\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: npm run dev');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testApi();
